unbind C-b
set -g prefix C-s

# act like vim
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+


bind r source-file ~/.tmux.conf

# Sane Scrolling
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on


# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1


# No escape time for vi mode
set -sg escape-time 0

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# Create splits and vertical splits
bind-key v split-window -h
bind-key ^V split-window -h
bind-key s split-window
bind-key ^S split-window

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''

set -g default-terminal "xterm-256color"

is_editor='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?|emacs-.*)(diff)?$"'
bind -n C-h if-shell "$is_editor" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_editor" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_editor" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_editor" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_editor" "send-keys C-\\" "select-pane -l"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

bind-key k send-keys -R \; clear-history  \; send-key Enter
bind-key C-k send-keys -R \; clear-history \; send-key Enter


# Force tmux session resize when moving from smaller screen
set-window-option -g aggressive-resize on
